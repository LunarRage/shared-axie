// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get _oldAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdminRemoved extends ethereum.Event {
  get params(): AdminRemoved__Params {
    return new AdminRemoved__Params(this);
  }
}

export class AdminRemoved__Params {
  _event: AdminRemoved;

  constructor(event: AdminRemoved) {
    this._event = event;
  }

  get _oldAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AxieEvolved extends ethereum.Event {
  get params(): AxieEvolved__Params {
    return new AxieEvolved__Params(this);
  }
}

export class AxieEvolved__Params {
  _event: AxieEvolved;

  constructor(event: AxieEvolved) {
    this._event = event;
  }

  get _axieId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _genes(): AxieEvolved_genesStruct {
    return changetype<AxieEvolved_genesStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class AxieEvolved_genesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class AxieSpawn extends ethereum.Event {
  get params(): AxieSpawn__Params {
    return new AxieSpawn__Params(this);
  }
}

export class AxieSpawn__Params {
  _event: AxieSpawn;

  constructor(event: AxieSpawn) {
    this._event = event;
  }

  get _axieId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AxieggMinted extends ethereum.Event {
  get params(): AxieggMinted__Params {
    return new AxieggMinted__Params(this);
  }
}

export class AxieggMinted__Params {
  _event: AxieggMinted;

  constructor(event: AxieggMinted) {
    this._event = event;
  }

  get _axieId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _axie(): AxieggMinted_axieStruct {
    return changetype<AxieggMinted_axieStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }

  get _axiegg(): AxieggMinted_axieggStruct {
    return changetype<AxieggMinted_axieggStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class AxieggMinted_axieStruct extends ethereum.Tuple {
  get sireId(): BigInt {
    return this[0].toBigInt();
  }

  get matronId(): BigInt {
    return this[1].toBigInt();
  }

  get birthDate(): BigInt {
    return this[2].toBigInt();
  }

  get genes(): AxieggMinted_axieGenesStruct {
    return changetype<AxieggMinted_axieGenesStruct>(this[3].toTuple());
  }

  get breedCount(): i32 {
    return this[4].toI32();
  }

  get level(): i32 {
    return this[5].toI32();
  }
}

export class AxieggMinted_axieGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class AxieggMinted_axieggStruct extends ethereum.Tuple {
  get sireGenes(): AxieggMinted_axieggSireGenesStruct {
    return changetype<AxieggMinted_axieggSireGenesStruct>(this[0].toTuple());
  }

  get matronGenes(): AxieggMinted_axieggMatronGenesStruct {
    return changetype<AxieggMinted_axieggMatronGenesStruct>(this[1].toTuple());
  }
}

export class AxieggMinted_axieggSireGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class AxieggMinted_axieggMatronGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MinterAdded extends ethereum.Event {
  get params(): MinterAdded__Params {
    return new MinterAdded__Params(this);
  }
}

export class MinterAdded__Params {
  _event: MinterAdded;

  constructor(event: MinterAdded) {
    this._event = event;
  }

  get _minter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MinterRemoved extends ethereum.Event {
  get params(): MinterRemoved__Params {
    return new MinterRemoved__Params(this);
  }
}

export class MinterRemoved__Params {
  _event: MinterRemoved;

  constructor(event: MinterRemoved) {
    this._event = event;
  }

  get _minter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NonceUpdated extends ethereum.Event {
  get params(): NonceUpdated__Params {
    return new NonceUpdated__Params(this);
  }
}

export class NonceUpdated__Params {
  _event: NonceUpdated;

  constructor(event: NonceUpdated) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }
}

export class PermissionSet extends ethereum.Event {
  get params(): PermissionSet__Params {
    return new PermissionSet__Params(this);
  }
}

export class PermissionSet__Params {
  _event: PermissionSet;

  constructor(event: PermissionSet) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _funcSig(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _approved(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class PermissionSetAll extends ethereum.Event {
  get params(): PermissionSetAll__Params {
    return new PermissionSetAll__Params(this);
  }
}

export class PermissionSetAll__Params {
  _event: PermissionSetAll;

  constructor(event: PermissionSetAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class SeederAdded extends ethereum.Event {
  get params(): SeederAdded__Params {
    return new SeederAdded__Params(this);
  }
}

export class SeederAdded__Params {
  _event: SeederAdded;

  constructor(event: SeederAdded) {
    this._event = event;
  }

  get _seeder(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SeederRemoved extends ethereum.Event {
  get params(): SeederRemoved__Params {
    return new SeederRemoved__Params(this);
  }
}

export class SeederRemoved__Params {
  _event: SeederRemoved;

  constructor(event: SeederRemoved) {
    this._event = event;
  }

  get _seeder(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SpenderUnwhitelisted extends ethereum.Event {
  get params(): SpenderUnwhitelisted__Params {
    return new SpenderUnwhitelisted__Params(this);
  }
}

export class SpenderUnwhitelisted__Params {
  _event: SpenderUnwhitelisted;

  constructor(event: SpenderUnwhitelisted) {
    this._event = event;
  }

  get _spender(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SpenderWhitelisted extends ethereum.Event {
  get params(): SpenderWhitelisted__Params {
    return new SpenderWhitelisted__Params(this);
  }
}

export class SpenderWhitelisted__Params {
  _event: SpenderWhitelisted;

  constructor(event: SpenderWhitelisted) {
    this._event = event;
  }

  get _spender(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenOperatorSet extends ethereum.Event {
  get params(): TokenOperatorSet__Params {
    return new TokenOperatorSet__Params(this);
  }
}

export class TokenOperatorSet__Params {
  _event: TokenOperatorSet;

  constructor(event: TokenOperatorSet) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class TokenPermissionSet extends ethereum.Event {
  get params(): TokenPermissionSet__Params {
    return new TokenPermissionSet__Params(this);
  }
}

export class TokenPermissionSet__Params {
  _event: TokenPermissionSet;

  constructor(event: TokenPermissionSet) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _funcSig(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _approved(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }
}

export class axie__axieResultGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class axie__axieResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: axie__axieResultGenesStruct;
  value4: i32;
  value5: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: axie__axieResultGenesStruct,
    value4: i32,
    value5: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromTuple(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    return map;
  }

  getSireId(): BigInt {
    return this.value0;
  }

  getMatronId(): BigInt {
    return this.value1;
  }

  getBirthDate(): BigInt {
    return this.value2;
  }

  getGenes(): axie__axieResultGenesStruct {
    return this.value3;
  }

  getBreedCount(): i32 {
    return this.value4;
  }

  getLevel(): i32 {
    return this.value5;
  }
}

export class axie__axieggResultSireGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class axie__axieggResultMatronGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class axie__axieggResult {
  value0: axie__axieggResultSireGenesStruct;
  value1: axie__axieggResultMatronGenesStruct;

  constructor(
    value0: axie__axieggResultSireGenesStruct,
    value1: axie__axieggResultMatronGenesStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getSireGenes(): axie__axieggResultSireGenesStruct {
    return this.value0;
  }

  getMatronGenes(): axie__axieggResultMatronGenesStruct {
    return this.value1;
  }
}

export class axie__mintAxieInput_axieStruct extends ethereum.Tuple {
  get sireId(): BigInt {
    return this[0].toBigInt();
  }

  get matronId(): BigInt {
    return this[1].toBigInt();
  }

  get birthDate(): BigInt {
    return this[2].toBigInt();
  }

  get genes(): axie__mintAxieInput_axieGenesStruct {
    return changetype<axie__mintAxieInput_axieGenesStruct>(this[3].toTuple());
  }

  get breedCount(): i32 {
    return this[4].toI32();
  }

  get level(): i32 {
    return this[5].toI32();
  }
}

export class axie__mintAxieInput_axieGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class axie__tokenPermissionInfosResult {
  value0: Address;
  value1: Bytes;

  constructor(value0: Address, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    return map;
  }

  getOperator(): Address {
    return this.value0;
  }

  getFuncSig(): Bytes {
    return this.value1;
  }
}

export class axie extends ethereum.SmartContract {
  static bind(address: Address): axie {
    return new axie("axie", address);
  }

  axie(_axieId: BigInt): axie__axieResult {
    let result = super.call(
      "axie",
      "axie(uint256):(uint256,uint256,uint256,(uint256,uint256),uint8,uint16)",
      [ethereum.Value.fromUnsignedBigInt(_axieId)]
    );

    return new axie__axieResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      changetype<axie__axieResultGenesStruct>(result[3].toTuple()),
      result[4].toI32(),
      result[5].toI32()
    );
  }

  try_axie(_axieId: BigInt): ethereum.CallResult<axie__axieResult> {
    let result = super.tryCall(
      "axie",
      "axie(uint256):(uint256,uint256,uint256,(uint256,uint256),uint8,uint16)",
      [ethereum.Value.fromUnsignedBigInt(_axieId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new axie__axieResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        changetype<axie__axieResultGenesStruct>(value[3].toTuple()),
        value[4].toI32(),
        value[5].toI32()
      )
    );
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  areAxiesEligibleForPairing(_sireId: BigInt, _matronId: BigInt): boolean {
    let result = super.call(
      "areAxiesEligibleForPairing",
      "areAxiesEligibleForPairing(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_sireId),
        ethereum.Value.fromUnsignedBigInt(_matronId)
      ]
    );

    return result[0].toBoolean();
  }

  try_areAxiesEligibleForPairing(
    _sireId: BigInt,
    _matronId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "areAxiesEligibleForPairing",
      "areAxiesEligibleForPairing(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_sireId),
        ethereum.Value.fromUnsignedBigInt(_matronId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  axieBreedLimit(): i32 {
    let result = super.call("axieBreedLimit", "axieBreedLimit():(uint8)", []);

    return result[0].toI32();
  }

  try_axieBreedLimit(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "axieBreedLimit",
      "axieBreedLimit():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  axiegg(param0: BigInt): axie__axieggResult {
    let result = super.call(
      "axiegg",
      "axiegg(uint256):((uint256,uint256),(uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return changetype<axie__axieggResult>(
      new axie__axieggResult(
        changetype<axie__axieggResultSireGenesStruct>(result[0].toTuple()),
        changetype<axie__axieggResultMatronGenesStruct>(result[1].toTuple())
      )
    );
  }

  try_axiegg(param0: BigInt): ethereum.CallResult<axie__axieggResult> {
    let result = super.tryCall(
      "axiegg",
      "axiegg(uint256):((uint256,uint256),(uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<axie__axieggResult>(
        new axie__axieggResult(
          changetype<axie__axieggResultSireGenesStruct>(value[0].toTuple()),
          changetype<axie__axieggResultMatronGenesStruct>(value[1].toTuple())
        )
      )
    );
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseTokenURI(): string {
    let result = super.call("baseTokenURI", "baseTokenURI():(string)", []);

    return result[0].toString();
  }

  try_baseTokenURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseTokenURI", "baseTokenURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  breedAxies(_sireId: BigInt, _matronId: BigInt): BigInt {
    let result = super.call(
      "breedAxies",
      "breedAxies(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_sireId),
        ethereum.Value.fromUnsignedBigInt(_matronId)
      ]
    );

    return result[0].toBigInt();
  }

  try_breedAxies(
    _sireId: BigInt,
    _matronId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "breedAxies",
      "breedAxies(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_sireId),
        ethereum.Value.fromUnsignedBigInt(_matronId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  breedingFee(): BigInt {
    let result = super.call("breedingFee", "breedingFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_breedingFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("breedingFee", "breedingFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  breedingFeeToken(): Address {
    let result = super.call(
      "breedingFeeToken",
      "breedingFeeToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_breedingFeeToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "breedingFeeToken",
      "breedingFeeToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  breedingPotion(): Address {
    let result = super.call("breedingPotion", "breedingPotion():(address)", []);

    return result[0].toAddress();
  }

  try_breedingPotion(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "breedingPotion",
      "breedingPotion():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentAxieId(): BigInt {
    let result = super.call("currentAxieId", "currentAxieId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentAxieId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentAxieId",
      "currentAxieId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  geneBrewerContract(): Address {
    let result = super.call(
      "geneBrewerContract",
      "geneBrewerContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_geneBrewerContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "geneBrewerContract",
      "geneBrewerContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRequirementsForBreeding(_axieId: BigInt): BigInt {
    let result = super.call(
      "getRequirementsForBreeding",
      "getRequirementsForBreeding(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_axieId)]
    );

    return result[0].toBigInt();
  }

  try_getRequirementsForBreeding(_axieId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequirementsForBreeding",
      "getRequirementsForBreeding(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_axieId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hoppingAxieId(param0: BigInt): BigInt {
    let result = super.call(
      "hoppingAxieId",
      "hoppingAxieId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_hoppingAxieId(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hoppingAxieId",
      "hoppingAxieId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAuthorized(_operator: Address, _tokenId: BigInt, _funcSig: Bytes): boolean {
    let result = super.call(
      "isAuthorized",
      "isAuthorized(address,uint256,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromFixedBytes(_funcSig)
      ]
    );

    return result[0].toBoolean();
  }

  try_isAuthorized(
    _operator: Address,
    _tokenId: BigInt,
    _funcSig: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAuthorized",
      "isAuthorized(address,uint256,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromFixedBytes(_funcSig)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isFunctionOperatorOfToken(
    _tokenId: BigInt,
    _operator: Address,
    _funcSig: Bytes
  ): boolean {
    let result = super.call(
      "isFunctionOperatorOfToken",
      "isFunctionOperatorOfToken(uint256,address,bytes4):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromFixedBytes(_funcSig)
      ]
    );

    return result[0].toBoolean();
  }

  try_isFunctionOperatorOfToken(
    _tokenId: BigInt,
    _operator: Address,
    _funcSig: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isFunctionOperatorOfToken",
      "isFunctionOperatorOfToken(uint256,address,bytes4):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromFixedBytes(_funcSig)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMinter(_addr: Address): boolean {
    let result = super.call("isMinter", "isMinter(address):(bool)", [
      ethereum.Value.fromAddress(_addr)
    ]);

    return result[0].toBoolean();
  }

  try_isMinter(_addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMinter", "isMinter(address):(bool)", [
      ethereum.Value.fromAddress(_addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPermissionSet(
    _owner: Address,
    _operator: Address,
    _funcSig: Bytes
  ): boolean {
    let result = super.call(
      "isPermissionSet",
      "isPermissionSet(address,address,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromFixedBytes(_funcSig)
      ]
    );

    return result[0].toBoolean();
  }

  try_isPermissionSet(
    _owner: Address,
    _operator: Address,
    _funcSig: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPermissionSet",
      "isPermissionSet(address,address,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromFixedBytes(_funcSig)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPermissionSetAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isPermissionSetAll",
      "isPermissionSetAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isPermissionSetAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPermissionSetAll",
      "isPermissionSetAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTokenOperator(_tokenId: BigInt, _operator: Address): boolean {
    let result = super.call(
      "isTokenOperator",
      "isTokenOperator(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isTokenOperator(
    _tokenId: BigInt,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTokenOperator",
      "isTokenOperator(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintAxie(_to: Address, _axie: axie__mintAxieInput_axieStruct): BigInt {
    let result = super.call(
      "mintAxie",
      "mintAxie(address,(uint256,uint256,uint256,(uint256,uint256),uint8,uint16)):(uint256)",
      [ethereum.Value.fromAddress(_to), ethereum.Value.fromTuple(_axie)]
    );

    return result[0].toBigInt();
  }

  try_mintAxie(
    _to: Address,
    _axie: axie__mintAxieInput_axieStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintAxie",
      "mintAxie(address,(uint256,uint256,uint256,(uint256,uint256),uint8,uint16)):(uint256)",
      [ethereum.Value.fromAddress(_to), ethereum.Value.fromTuple(_axie)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minter(param0: Address): boolean {
    let result = super.call("minter", "minter(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_minter(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("minter", "minter(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minters(param0: BigInt): Address {
    let result = super.call("minters", "minters(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_minters(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("minters", "minters(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  neededPotionForBreeding(param0: BigInt): BigInt {
    let result = super.call(
      "neededPotionForBreeding",
      "neededPotionForBreeding(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_neededPotionForBreeding(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "neededPotionForBreeding",
      "neededPotionForBreeding(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nonces(param0: BigInt): BigInt {
    let result = super.call("nonces", "nonces(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operatorPermission(param0: Address, param1: Address, param2: Bytes): boolean {
    let result = super.call(
      "operatorPermission",
      "operatorPermission(address,address,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromFixedBytes(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_operatorPermission(
    param0: Address,
    param1: Address,
    param2: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "operatorPermission",
      "operatorPermission(address,address,bytes4):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromFixedBytes(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  preExecutionLogicContract(): Address {
    let result = super.call(
      "preExecutionLogicContract",
      "preExecutionLogicContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_preExecutionLogicContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "preExecutionLogicContract",
      "preExecutionLogicContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  seeder(param0: Address): boolean {
    let result = super.call("seeder", "seeder(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_seeder(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("seeder", "seeder(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  seeders(param0: BigInt): Address {
    let result = super.call("seeders", "seeders(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_seeders(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("seeders", "seeders(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stageOf(_axieId: BigInt): i32 {
    let result = super.call("stageOf", "stageOf(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(_axieId)
    ]);

    return result[0].toI32();
  }

  try_stageOf(_axieId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("stageOf", "stageOf(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(_axieId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  stateOf(_tokenId: BigInt): Bytes {
    let result = super.call("stateOf", "stateOf(uint256):(bytes)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBytes();
  }

  try_stateOf(_tokenId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("stateOf", "stateOf(uint256):(bytes)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  toAdultDuration(): BigInt {
    let result = super.call(
      "toAdultDuration",
      "toAdultDuration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_toAdultDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "toAdultDuration",
      "toAdultDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenByIndex(_index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(_index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(_owner: Address, _index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    _owner: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenPermission(param0: BigInt, param1: Address, param2: Bytes): boolean {
    let result = super.call(
      "tokenPermission",
      "tokenPermission(uint256,address,bytes4):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromFixedBytes(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_tokenPermission(
    param0: BigInt,
    param1: Address,
    param2: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "tokenPermission",
      "tokenPermission(uint256,address,bytes4):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromFixedBytes(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenPermissionInfos(
    param0: BigInt,
    param1: BigInt
  ): axie__tokenPermissionInfosResult {
    let result = super.call(
      "tokenPermissionInfos",
      "tokenPermissionInfos(uint256,uint256):(address,bytes4)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new axie__tokenPermissionInfosResult(
      result[0].toAddress(),
      result[1].toBytes()
    );
  }

  try_tokenPermissionInfos(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<axie__tokenPermissionInfosResult> {
    let result = super.tryCall(
      "tokenPermissionInfos",
      "tokenPermissionInfos(uint256,uint256):(address,bytes4)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new axie__tokenPermissionInfosResult(
        value[0].toAddress(),
        value[1].toBytes()
      )
    );
  }

  tokenReceiver(): Address {
    let result = super.call("tokenReceiver", "tokenReceiver():(address)", []);

    return result[0].toAddress();
  }

  try_tokenReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenReceiver",
      "tokenReceiver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelisted(param0: Address): boolean {
    let result = super.call("whitelisted", "whitelisted(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_whitelisted(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("whitelisted", "whitelisted(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMintersCall extends ethereum.Call {
  get inputs(): AddMintersCall__Inputs {
    return new AddMintersCall__Inputs(this);
  }

  get outputs(): AddMintersCall__Outputs {
    return new AddMintersCall__Outputs(this);
  }
}

export class AddMintersCall__Inputs {
  _call: AddMintersCall;

  constructor(call: AddMintersCall) {
    this._call = call;
  }

  get _addedMinters(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddMintersCall__Outputs {
  _call: AddMintersCall;

  constructor(call: AddMintersCall) {
    this._call = call;
  }
}

export class AddSeedersCall extends ethereum.Call {
  get inputs(): AddSeedersCall__Inputs {
    return new AddSeedersCall__Inputs(this);
  }

  get outputs(): AddSeedersCall__Outputs {
    return new AddSeedersCall__Outputs(this);
  }
}

export class AddSeedersCall__Inputs {
  _call: AddSeedersCall;

  constructor(call: AddSeedersCall) {
    this._call = call;
  }

  get _addedSeeders(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddSeedersCall__Outputs {
  _call: AddSeedersCall;

  constructor(call: AddSeedersCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BatchMintAxieggsCall extends ethereum.Call {
  get inputs(): BatchMintAxieggsCall__Inputs {
    return new BatchMintAxieggsCall__Inputs(this);
  }

  get outputs(): BatchMintAxieggsCall__Outputs {
    return new BatchMintAxieggsCall__Outputs(this);
  }
}

export class BatchMintAxieggsCall__Inputs {
  _call: BatchMintAxieggsCall;

  constructor(call: BatchMintAxieggsCall) {
    this._call = call;
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _axiePackages(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get _axieggPackages(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class BatchMintAxieggsCall__Outputs {
  _call: BatchMintAxieggsCall;

  constructor(call: BatchMintAxieggsCall) {
    this._call = call;
  }
}

export class BatchMintAxiesCall extends ethereum.Call {
  get inputs(): BatchMintAxiesCall__Inputs {
    return new BatchMintAxiesCall__Inputs(this);
  }

  get outputs(): BatchMintAxiesCall__Outputs {
    return new BatchMintAxiesCall__Outputs(this);
  }
}

export class BatchMintAxiesCall__Inputs {
  _call: BatchMintAxiesCall;

  constructor(call: BatchMintAxiesCall) {
    this._call = call;
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _packages(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BatchMintAxiesCall__Outputs {
  _call: BatchMintAxiesCall;

  constructor(call: BatchMintAxiesCall) {
    this._call = call;
  }
}

export class BreedAxiesCall extends ethereum.Call {
  get inputs(): BreedAxiesCall__Inputs {
    return new BreedAxiesCall__Inputs(this);
  }

  get outputs(): BreedAxiesCall__Outputs {
    return new BreedAxiesCall__Outputs(this);
  }
}

export class BreedAxiesCall__Inputs {
  _call: BreedAxiesCall;

  constructor(call: BreedAxiesCall) {
    this._call = call;
  }

  get _sireId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _matronId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BreedAxiesCall__Outputs {
  _call: BreedAxiesCall;

  constructor(call: BreedAxiesCall) {
    this._call = call;
  }

  get _axieId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ChangeAdminCall extends ethereum.Call {
  get inputs(): ChangeAdminCall__Inputs {
    return new ChangeAdminCall__Inputs(this);
  }

  get outputs(): ChangeAdminCall__Outputs {
    return new ChangeAdminCall__Outputs(this);
  }
}

export class ChangeAdminCall__Inputs {
  _call: ChangeAdminCall;

  constructor(call: ChangeAdminCall) {
    this._call = call;
  }

  get _newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeAdminCall__Outputs {
  _call: ChangeAdminCall;

  constructor(call: ChangeAdminCall) {
    this._call = call;
  }
}

export class EvolveAxieCall extends ethereum.Call {
  get inputs(): EvolveAxieCall__Inputs {
    return new EvolveAxieCall__Inputs(this);
  }

  get outputs(): EvolveAxieCall__Outputs {
    return new EvolveAxieCall__Outputs(this);
  }
}

export class EvolveAxieCall__Inputs {
  _call: EvolveAxieCall;

  constructor(call: EvolveAxieCall) {
    this._call = call;
  }

  get _axieId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _genes(): EvolveAxieCall_genesStruct {
    return changetype<EvolveAxieCall_genesStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class EvolveAxieCall__Outputs {
  _call: EvolveAxieCall;

  constructor(call: EvolveAxieCall) {
    this._call = call;
  }
}

export class EvolveAxieCall_genesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class GrowAxieggToAdultCall extends ethereum.Call {
  get inputs(): GrowAxieggToAdultCall__Inputs {
    return new GrowAxieggToAdultCall__Inputs(this);
  }

  get outputs(): GrowAxieggToAdultCall__Outputs {
    return new GrowAxieggToAdultCall__Outputs(this);
  }
}

export class GrowAxieggToAdultCall__Inputs {
  _call: GrowAxieggToAdultCall;

  constructor(call: GrowAxieggToAdultCall) {
    this._call = call;
  }

  get _axieId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _seed(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class GrowAxieggToAdultCall__Outputs {
  _call: GrowAxieggToAdultCall;

  constructor(call: GrowAxieggToAdultCall) {
    this._call = call;
  }
}

export class MintAxieCall extends ethereum.Call {
  get inputs(): MintAxieCall__Inputs {
    return new MintAxieCall__Inputs(this);
  }

  get outputs(): MintAxieCall__Outputs {
    return new MintAxieCall__Outputs(this);
  }
}

export class MintAxieCall__Inputs {
  _call: MintAxieCall;

  constructor(call: MintAxieCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _axie(): MintAxieCall_axieStruct {
    return changetype<MintAxieCall_axieStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class MintAxieCall__Outputs {
  _call: MintAxieCall;

  constructor(call: MintAxieCall) {
    this._call = call;
  }

  get _axieId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MintAxieCall_axieStruct extends ethereum.Tuple {
  get sireId(): BigInt {
    return this[0].toBigInt();
  }

  get matronId(): BigInt {
    return this[1].toBigInt();
  }

  get birthDate(): BigInt {
    return this[2].toBigInt();
  }

  get genes(): MintAxieCall_axieGenesStruct {
    return changetype<MintAxieCall_axieGenesStruct>(this[3].toTuple());
  }

  get breedCount(): i32 {
    return this[4].toI32();
  }

  get level(): i32 {
    return this[5].toI32();
  }
}

export class MintAxieCall_axieGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MintPromoAxieCall extends ethereum.Call {
  get inputs(): MintPromoAxieCall__Inputs {
    return new MintPromoAxieCall__Inputs(this);
  }

  get outputs(): MintPromoAxieCall__Outputs {
    return new MintPromoAxieCall__Outputs(this);
  }
}

export class MintPromoAxieCall__Inputs {
  _call: MintPromoAxieCall;

  constructor(call: MintPromoAxieCall) {
    this._call = call;
  }

  get _axieId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _hoppingAxieId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _axie(): MintPromoAxieCall_axieStruct {
    return changetype<MintPromoAxieCall_axieStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _to(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class MintPromoAxieCall__Outputs {
  _call: MintPromoAxieCall;

  constructor(call: MintPromoAxieCall) {
    this._call = call;
  }
}

export class MintPromoAxieCall_axieStruct extends ethereum.Tuple {
  get sireId(): BigInt {
    return this[0].toBigInt();
  }

  get matronId(): BigInt {
    return this[1].toBigInt();
  }

  get birthDate(): BigInt {
    return this[2].toBigInt();
  }

  get genes(): MintPromoAxieCall_axieGenesStruct {
    return changetype<MintPromoAxieCall_axieGenesStruct>(this[3].toTuple());
  }

  get breedCount(): i32 {
    return this[4].toI32();
  }

  get level(): i32 {
    return this[5].toI32();
  }
}

export class MintPromoAxieCall_axieGenesStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveAdminCall extends ethereum.Call {
  get inputs(): RemoveAdminCall__Inputs {
    return new RemoveAdminCall__Inputs(this);
  }

  get outputs(): RemoveAdminCall__Outputs {
    return new RemoveAdminCall__Outputs(this);
  }
}

export class RemoveAdminCall__Inputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class RemoveAdminCall__Outputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class RemoveMintersCall extends ethereum.Call {
  get inputs(): RemoveMintersCall__Inputs {
    return new RemoveMintersCall__Inputs(this);
  }

  get outputs(): RemoveMintersCall__Outputs {
    return new RemoveMintersCall__Outputs(this);
  }
}

export class RemoveMintersCall__Inputs {
  _call: RemoveMintersCall;

  constructor(call: RemoveMintersCall) {
    this._call = call;
  }

  get _removedMinters(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveMintersCall__Outputs {
  _call: RemoveMintersCall;

  constructor(call: RemoveMintersCall) {
    this._call = call;
  }
}

export class RemoveSeedersCall extends ethereum.Call {
  get inputs(): RemoveSeedersCall__Inputs {
    return new RemoveSeedersCall__Inputs(this);
  }

  get outputs(): RemoveSeedersCall__Outputs {
    return new RemoveSeedersCall__Outputs(this);
  }
}

export class RemoveSeedersCall__Inputs {
  _call: RemoveSeedersCall;

  constructor(call: RemoveSeedersCall) {
    this._call = call;
  }

  get _removedSeeders(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveSeedersCall__Outputs {
  _call: RemoveSeedersCall;

  constructor(call: RemoveSeedersCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetAdultDurationCall extends ethereum.Call {
  get inputs(): SetAdultDurationCall__Inputs {
    return new SetAdultDurationCall__Inputs(this);
  }

  get outputs(): SetAdultDurationCall__Outputs {
    return new SetAdultDurationCall__Outputs(this);
  }
}

export class SetAdultDurationCall__Inputs {
  _call: SetAdultDurationCall;

  constructor(call: SetAdultDurationCall) {
    this._call = call;
  }

  get _toAdultDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAdultDurationCall__Outputs {
  _call: SetAdultDurationCall;

  constructor(call: SetAdultDurationCall) {
    this._call = call;
  }
}

export class SetAllPermissionForCall extends ethereum.Call {
  get inputs(): SetAllPermissionForCall__Inputs {
    return new SetAllPermissionForCall__Inputs(this);
  }

  get outputs(): SetAllPermissionForCall__Outputs {
    return new SetAllPermissionForCall__Outputs(this);
  }
}

export class SetAllPermissionForCall__Inputs {
  _call: SetAllPermissionForCall;

  constructor(call: SetAllPermissionForCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAllPermissionForCall__Outputs {
  _call: SetAllPermissionForCall;

  constructor(call: SetAllPermissionForCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetAxieBreedLimitCall extends ethereum.Call {
  get inputs(): SetAxieBreedLimitCall__Inputs {
    return new SetAxieBreedLimitCall__Inputs(this);
  }

  get outputs(): SetAxieBreedLimitCall__Outputs {
    return new SetAxieBreedLimitCall__Outputs(this);
  }
}

export class SetAxieBreedLimitCall__Inputs {
  _call: SetAxieBreedLimitCall;

  constructor(call: SetAxieBreedLimitCall) {
    this._call = call;
  }

  get _axieBreedLimit(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetAxieBreedLimitCall__Outputs {
  _call: SetAxieBreedLimitCall;

  constructor(call: SetAxieBreedLimitCall) {
    this._call = call;
  }
}

export class SetBaseTokenURICall extends ethereum.Call {
  get inputs(): SetBaseTokenURICall__Inputs {
    return new SetBaseTokenURICall__Inputs(this);
  }

  get outputs(): SetBaseTokenURICall__Outputs {
    return new SetBaseTokenURICall__Outputs(this);
  }
}

export class SetBaseTokenURICall__Inputs {
  _call: SetBaseTokenURICall;

  constructor(call: SetBaseTokenURICall) {
    this._call = call;
  }

  get _baseTokenURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseTokenURICall__Outputs {
  _call: SetBaseTokenURICall;

  constructor(call: SetBaseTokenURICall) {
    this._call = call;
  }
}

export class SetBreedingFeeCall extends ethereum.Call {
  get inputs(): SetBreedingFeeCall__Inputs {
    return new SetBreedingFeeCall__Inputs(this);
  }

  get outputs(): SetBreedingFeeCall__Outputs {
    return new SetBreedingFeeCall__Outputs(this);
  }
}

export class SetBreedingFeeCall__Inputs {
  _call: SetBreedingFeeCall;

  constructor(call: SetBreedingFeeCall) {
    this._call = call;
  }

  get _breedingFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBreedingFeeCall__Outputs {
  _call: SetBreedingFeeCall;

  constructor(call: SetBreedingFeeCall) {
    this._call = call;
  }
}

export class SetBreedingFeeTokenCall extends ethereum.Call {
  get inputs(): SetBreedingFeeTokenCall__Inputs {
    return new SetBreedingFeeTokenCall__Inputs(this);
  }

  get outputs(): SetBreedingFeeTokenCall__Outputs {
    return new SetBreedingFeeTokenCall__Outputs(this);
  }
}

export class SetBreedingFeeTokenCall__Inputs {
  _call: SetBreedingFeeTokenCall;

  constructor(call: SetBreedingFeeTokenCall) {
    this._call = call;
  }

  get _breedingFeeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBreedingFeeTokenCall__Outputs {
  _call: SetBreedingFeeTokenCall;

  constructor(call: SetBreedingFeeTokenCall) {
    this._call = call;
  }
}

export class SetBreedingPotionContractCall extends ethereum.Call {
  get inputs(): SetBreedingPotionContractCall__Inputs {
    return new SetBreedingPotionContractCall__Inputs(this);
  }

  get outputs(): SetBreedingPotionContractCall__Outputs {
    return new SetBreedingPotionContractCall__Outputs(this);
  }
}

export class SetBreedingPotionContractCall__Inputs {
  _call: SetBreedingPotionContractCall;

  constructor(call: SetBreedingPotionContractCall) {
    this._call = call;
  }

  get _breedingPotion(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBreedingPotionContractCall__Outputs {
  _call: SetBreedingPotionContractCall;

  constructor(call: SetBreedingPotionContractCall) {
    this._call = call;
  }
}

export class SetCurrentAxieIdCall extends ethereum.Call {
  get inputs(): SetCurrentAxieIdCall__Inputs {
    return new SetCurrentAxieIdCall__Inputs(this);
  }

  get outputs(): SetCurrentAxieIdCall__Outputs {
    return new SetCurrentAxieIdCall__Outputs(this);
  }
}

export class SetCurrentAxieIdCall__Inputs {
  _call: SetCurrentAxieIdCall;

  constructor(call: SetCurrentAxieIdCall) {
    this._call = call;
  }

  get _currentAxieId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCurrentAxieIdCall__Outputs {
  _call: SetCurrentAxieIdCall;

  constructor(call: SetCurrentAxieIdCall) {
    this._call = call;
  }
}

export class SetFunctionOperatorForTokenCall extends ethereum.Call {
  get inputs(): SetFunctionOperatorForTokenCall__Inputs {
    return new SetFunctionOperatorForTokenCall__Inputs(this);
  }

  get outputs(): SetFunctionOperatorForTokenCall__Outputs {
    return new SetFunctionOperatorForTokenCall__Outputs(this);
  }
}

export class SetFunctionOperatorForTokenCall__Inputs {
  _call: SetFunctionOperatorForTokenCall;

  constructor(call: SetFunctionOperatorForTokenCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _operator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _funcSig(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _approved(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class SetFunctionOperatorForTokenCall__Outputs {
  _call: SetFunctionOperatorForTokenCall;

  constructor(call: SetFunctionOperatorForTokenCall) {
    this._call = call;
  }
}

export class SetGeneBrewerContractCall extends ethereum.Call {
  get inputs(): SetGeneBrewerContractCall__Inputs {
    return new SetGeneBrewerContractCall__Inputs(this);
  }

  get outputs(): SetGeneBrewerContractCall__Outputs {
    return new SetGeneBrewerContractCall__Outputs(this);
  }
}

export class SetGeneBrewerContractCall__Inputs {
  _call: SetGeneBrewerContractCall;

  constructor(call: SetGeneBrewerContractCall) {
    this._call = call;
  }

  get _geneBrewerContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGeneBrewerContractCall__Outputs {
  _call: SetGeneBrewerContractCall;

  constructor(call: SetGeneBrewerContractCall) {
    this._call = call;
  }
}

export class SetHoppingAxieIdsCall extends ethereum.Call {
  get inputs(): SetHoppingAxieIdsCall__Inputs {
    return new SetHoppingAxieIdsCall__Inputs(this);
  }

  get outputs(): SetHoppingAxieIdsCall__Outputs {
    return new SetHoppingAxieIdsCall__Outputs(this);
  }
}

export class SetHoppingAxieIdsCall__Inputs {
  _call: SetHoppingAxieIdsCall;

  constructor(call: SetHoppingAxieIdsCall) {
    this._call = call;
  }

  get _axieIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _hoppingAxieIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetHoppingAxieIdsCall__Outputs {
  _call: SetHoppingAxieIdsCall;

  constructor(call: SetHoppingAxieIdsCall) {
    this._call = call;
  }
}

export class SetNeededPotionForBreedingCall extends ethereum.Call {
  get inputs(): SetNeededPotionForBreedingCall__Inputs {
    return new SetNeededPotionForBreedingCall__Inputs(this);
  }

  get outputs(): SetNeededPotionForBreedingCall__Outputs {
    return new SetNeededPotionForBreedingCall__Outputs(this);
  }
}

export class SetNeededPotionForBreedingCall__Inputs {
  _call: SetNeededPotionForBreedingCall;

  constructor(call: SetNeededPotionForBreedingCall) {
    this._call = call;
  }

  get _neededPotionForBreeding(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetNeededPotionForBreedingCall__Outputs {
  _call: SetNeededPotionForBreedingCall;

  constructor(call: SetNeededPotionForBreedingCall) {
    this._call = call;
  }
}

export class SetPermissionForCall extends ethereum.Call {
  get inputs(): SetPermissionForCall__Inputs {
    return new SetPermissionForCall__Inputs(this);
  }

  get outputs(): SetPermissionForCall__Outputs {
    return new SetPermissionForCall__Outputs(this);
  }
}

export class SetPermissionForCall__Inputs {
  _call: SetPermissionForCall;

  constructor(call: SetPermissionForCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _funcSig(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _approved(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetPermissionForCall__Outputs {
  _call: SetPermissionForCall;

  constructor(call: SetPermissionForCall) {
    this._call = call;
  }
}

export class SetPreExecutionLogicContractCall extends ethereum.Call {
  get inputs(): SetPreExecutionLogicContractCall__Inputs {
    return new SetPreExecutionLogicContractCall__Inputs(this);
  }

  get outputs(): SetPreExecutionLogicContractCall__Outputs {
    return new SetPreExecutionLogicContractCall__Outputs(this);
  }
}

export class SetPreExecutionLogicContractCall__Inputs {
  _call: SetPreExecutionLogicContractCall;

  constructor(call: SetPreExecutionLogicContractCall) {
    this._call = call;
  }

  get _preExecutionLogicContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPreExecutionLogicContractCall__Outputs {
  _call: SetPreExecutionLogicContractCall;

  constructor(call: SetPreExecutionLogicContractCall) {
    this._call = call;
  }
}

export class SetTokenOperatorCall extends ethereum.Call {
  get inputs(): SetTokenOperatorCall__Inputs {
    return new SetTokenOperatorCall__Inputs(this);
  }

  get outputs(): SetTokenOperatorCall__Outputs {
    return new SetTokenOperatorCall__Outputs(this);
  }
}

export class SetTokenOperatorCall__Inputs {
  _call: SetTokenOperatorCall;

  constructor(call: SetTokenOperatorCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _operator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetTokenOperatorCall__Outputs {
  _call: SetTokenOperatorCall;

  constructor(call: SetTokenOperatorCall) {
    this._call = call;
  }
}

export class SetTokenReceiverCall extends ethereum.Call {
  get inputs(): SetTokenReceiverCall__Inputs {
    return new SetTokenReceiverCall__Inputs(this);
  }

  get outputs(): SetTokenReceiverCall__Outputs {
    return new SetTokenReceiverCall__Outputs(this);
  }
}

export class SetTokenReceiverCall__Inputs {
  _call: SetTokenReceiverCall;

  constructor(call: SetTokenReceiverCall) {
    this._call = call;
  }

  get _tokenReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenReceiverCall__Outputs {
  _call: SetTokenReceiverCall;

  constructor(call: SetTokenReceiverCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnwhitelistCall extends ethereum.Call {
  get inputs(): UnwhitelistCall__Inputs {
    return new UnwhitelistCall__Inputs(this);
  }

  get outputs(): UnwhitelistCall__Outputs {
    return new UnwhitelistCall__Outputs(this);
  }
}

export class UnwhitelistCall__Inputs {
  _call: UnwhitelistCall;

  constructor(call: UnwhitelistCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnwhitelistCall__Outputs {
  _call: UnwhitelistCall;

  constructor(call: UnwhitelistCall) {
    this._call = call;
  }
}

export class WhitelistCall extends ethereum.Call {
  get inputs(): WhitelistCall__Inputs {
    return new WhitelistCall__Inputs(this);
  }

  get outputs(): WhitelistCall__Outputs {
    return new WhitelistCall__Outputs(this);
  }
}

export class WhitelistCall__Inputs {
  _call: WhitelistCall;

  constructor(call: WhitelistCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistCall__Outputs {
  _call: WhitelistCall;

  constructor(call: WhitelistCall) {
    this._call = call;
  }
}
